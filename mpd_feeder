#!/bin/sh

### BEGIN INIT INFO
# Provides:          mpd_feeder
# Required-Start:    $local_fs $remote_fs mpd
# Required-Stop:     $local_fs $remote_fs
# Should-Start:      autofs $network $named alsa-utils pulseaudio
# Should-Stop:       autofs $network $named alsa-utils pulseaudio
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: MPD Pandora Feeder
# Description:       Feeds MPD with Pandora
### END INIT INFO

. /lib/lsb/init-functions

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="MPD Pandora Feeder"
NAME=mpd_feeder
DAEMON="/usr/local/mpdpandorafeeder/mpdpandorafeeder"
PYTHON="/usr/bin/python"
START_MPD_FEEDER=true
export XDG_CONFIG_HOME=/usr/local/mpdpandorafeeder

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

if [ -n "$MPD_FEEDER_DEBUG" ]; then
    set -x
    MPD_FEEDER_OPTS=--debug
fi

mpd_feeder_start () {
    if [ "$START_MPD_FEEDER" != "true" ]; then
        log_action_msg "Not starting MPD Feeder: disabled by /etc/default/$NAME".
        exit 0
    fi

    if [ -z "$MPD_FEEDER_PORT" ]; then
        log_failure_msg \
            "Must set MPD_FEEDER_PORT; cannot start daemon."
        exit 1
    fi
    if [ -z "$PID_FILE" ]; then
        log_failure_msg \
            "Must set PID_FILE; cannot start daemon."
        exit 1
    fi
    log_daemon_msg "Starting $DESC" "$NAME"

    start-stop-daemon --start --quiet --oknodo --pidfile $PID_FILE \
        --background --make-pidfile \
        --startas $PYTHON -- "$DAEMON" $MPD_FEEDER_OPTS --port $MPD_FEEDER_PORT
    log_end_msg $?
}

mpd_stop () {
    if [ "$START_MPD_FEEDER" != "true" ]; then
        log_failure_msg "Not stopping MPD Feeder: disabled by /etc/default/$NAME".
        exit 0
    fi

    log_daemon_msg "Stopping $DESC" "$NAME"
    start-stop-daemon --stop --quiet --oknodo --retry 5 --pidfile $PID_FILE 
    log_end_msg $?
}

case "$1" in
    start)
        mpd_feeder_start
        ;;
    stop)
        mpd_feeder_stop
        ;;
    status)
    	status_of_proc -p $PIDFILE $DAEMON $NAME
	;;
    restart|force-reload)
        mpd_feeder_stop
        mpd_feeder_start
        ;;
    force-start)
        mpd_feeder_start
        ;;
    force-restart)
        mpd_feeder_stop
        mpd_feeder_start
        ;;
    force-reload)
	mpd_feeder_stop
	mpd_feeder_start
	;;
    *)
        echo "Usage: $0 {start|start-create-db|stop|restart|force-reload}"
        exit 2
        ;;
esac
